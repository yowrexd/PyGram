~ start
Mystra: Hey there! Ever wondered who designs the blueprints for complex software systems?
- Yes, tell me more!
	Mystra: That's what Software Architects do! They're like the master planners of the software world.
	=> role_overview
- What's a Software Architect?
	Mystra: Let me show you how these technical visionaries shape the future of software!
	=> role_overview

~ role_overview
Mystra: A Software Architect is like a city planner, but for software systems:
		• Designs the big picture
		• Makes critical technical decisions
		• Ensures everything works together
		• Plans for future growth
- What do they design?
	=> design_phase
- How do they lead?
	=> leadership_role
- What tools do they use?
	=> architect_tools

~ design_phase
Mystra: Think of software architecture like building a city:
		They plan:
		• How different parts connect
		• Which technologies to use
		• How data flows through the system
		For example, they might decide whether an app needs microservices or a simpler structure.
- Tell me about leadership
	=> leadership_role
- What about requirements?
	=> requirements
- Show me the tools
	=> architect_tools

~ leadership_role
Mystra: Software Architects are technical leaders who:
		• Guide development teams
		• Review critical code
		• Solve complex problems
		• Mentor other developers
		• Set coding standards
- How do they work with teams?
	=> team_collaboration
- What about planning?
	=> design_phase
- Tell me about tools
	=> architect_tools

~ team_collaboration
Mystra: Architects work with many different teams:
		Development Teams:
		• Provide technical guidance
		• Review architecture decisions
		• Resolve technical conflicts
Mystra: Business Teams:
		• Understand requirements
		• Align solutions with goals
		• Present technical options
- Tell me about requirements
	=> requirements
- What tools do they use?
	=> architect_tools
- How do they plan?
	=> design_phase

~ requirements
Mystra: Architects translate business needs into technical solutions:
		They analyze:
		• Performance requirements
		• Scalability needs
		• Security concerns
		• Budget constraints
		Then create designs that meet these needs.
- How do they implement?
	=> implementation
- What tools help?
	=> architect_tools
- Tell me about risks
	=> risk_management

~ implementation
Mystra: During implementation, architects:
		• Guide the development process
		• Ensure design principles are followed
		• Optimize system performance
		• Solve technical challenges
		• Adapt plans as needed
- What about risks?
	=> risk_management
- Show me the tools
	=> architect_tools
- How do they lead?
	=> leadership_role

~ risk_management
Mystra: Architects are master risk managers:
		They prevent:
		• Performance bottlenecks
		• Security vulnerabilities
		• Scalability issues
		• Integration problems
		• Technical debt
- What tools help?
	=> architect_tools
- How do they implement?
	=> implementation
- Tell me about planning
	=> design_phase

~ architect_tools
Mystra: Software Architects use powerful tools:
		Design Tools:
		• Lucidchart - System diagrams
		• Draw.io - Architecture planning
		• Enterprise Architect - Detailed modeling
Mystra: Cloud Platforms:
		• AWS - Amazon's cloud
		• Azure - Microsoft's platform
		• Google Cloud - Google's services
Mystra: Development Tools:
		• Git - Version control
		• Jenkins - CI/CD pipelines
		• Docker - Containerization
- How do they use these?
	=> tool_usage
- Tell me about skills
	=> required_skills
- How do I become one?
	=> career_path

~ tool_usage
Mystra: Architects use these tools to:
		• Create system blueprints
		• Monitor performance
		• Ensure security
		• Deploy applications
		• Scale systems
- What skills are needed?
	=> required_skills
- Show me the career path
	=> career_path
- Tell me about risks
	=> risk_management

~ required_skills
Mystra: Software Architects need various skills:
		Technical Skills:
		• Programming expertise
		• System design knowledge
		• Security understanding
		• Cloud architecture
Mystra: Soft Skills:
		• Leadership
		• Communication
		• Problem-solving
- How do I become one?
	=> career_path
- What tools to learn?
	=> architect_tools
- Show me responsibilities
	=> role_overview

~ career_path
Mystra: The path to becoming a Software Architect:
		1. Start as a developer
		2. Master multiple technologies
		3. Lead development teams
		4. Design system architectures
		5. Grow into architecture role
- What skills do I need?
	=> required_skills
- What tools to learn?
	=> architect_tools
- I'm ready!
	=> ending

~ ending
Mystra: You now know what makes Software Architects special!
		Remember:
		• They're the visionaries of software
		• They bridge business and technology
		• They shape the future of systems
		Ready to become a Software Architect?
- Yes, I'm excited!
	Mystra: Perfect! Your journey to becoming a master architect begins now!
	set mystra = "true"
	=> END
- Show me the overview again
	=> role_overview